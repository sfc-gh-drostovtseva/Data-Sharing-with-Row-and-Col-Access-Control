
use role accountadmin;

/*****************************************************************************************************/
/*                                         create demo data                                          */
/*****************************************************************************************************/

create database hr_data; --mock database imitate SABHRS
create schema main_hr_data; --mock HR data in SABHRS
create schema shared_hr_data; -- mock HR data that will be shared with departments
create stage source_data;
create warehouse hr_data_wh;

use database hr_data;
use schema main_hr_data;
use warehouse hr_data_wh;


-- Load some Employee data
-- in SnowSQL, execute "put file:///Users/drostovtseva/Downloads/Employee_data.csv @source_data;
ls @source_data;

create or replace table employee_data
(department varchar, id integer, first_name varchar, last_name varchar, ssn varchar, street_address varchar,
 city varchar, state varchar, zip_code varchar,salary integer)
;

create or replace file format my_csv type = 'CSV' skip_header = 1;

copy into employee_data from @source_data
file_format=(format_name=my_csv);

-- Create a mapping table to demonstrate row access control
create or replace table sharing_access (
  department string,
  snowflake_account string
);

insert into sharing_access 
values
('Dept1', current_account()),
('Dept2', current_account()),
('Dept3', current_account()),
('Dept1', 'PWA89469'); -- the second account belongs to Dept1 and they can only see Dept1 data

/********************************************************************************************/
/*               Scenario 1: Secure view for sharing with row-level security                */
/********************************************************************************************/

--data to be shared
select * from employee_data;

select department, count(*)
from employee_data
group by 1;

--mapping table to enable row-level security
select * from sharing_access;

--Create a secure view in the 'shared_hr_data' schema. This view filters the employee data from the first
--table by account, using the mapping information in the second table.         

create or replace secure view hr_data.shared_hr_data.employee_data_v as
    select a.*
    from hr_data.MAIN_HR_DATA.EMPLOYEE_DATA as a
    join hr_data.MAIN_HR_DATA.SHARING_ACCESS as b on a.department = b.department
    and b.snowflake_account = current_account();

select * from hr_data.shared_hr_data.employee_data_v;

grant select on hr_data.shared_hr_data.employee_data_v to public;

--create a masking policy for SSN  - there is no reason for anyone to see the SSN
create or replace masking policy mask_ssn as
(ssn varchar) returns varchar ->
'***-**-'||substr(ssn, 8,11);

--apply the masking policy to mask all SSNs for all viewers
alter view hr_data.shared_hr_data.employee_data_v modify ssn set masking policy mask_ssn;

--test the secure view by first querying the data as the provider account. */
select * from hr_data.shared_hr_data.employee_data_v;
select count(*) from hr_data.shared_hr_data.employee_data_v;

select department, count(*) 
from hr_data.shared_hr_data.employee_data_v
group by 1;

select * from hr_data.shared_hr_data.employee_data_v where department='Dept2';

-- next, test the secure view by querying the data as a simulated consumer account.                  */
alter session set simulated_data_sharing_consumer=PWA89469;

select count(*) from hr_data.shared_hr_data.employee_data_v; -- only 1/3 of the records are visible;

select department, count(*) 
from hr_data.shared_hr_data.employee_data_v
group by 1; --only Dept1 data is visible

select * from hr_data.shared_hr_data.employee_data_v where department='Dept2'; --cannot see Dept2 data

alter session unset simulated_data_sharing_consumer;

/********************************************************************************************/
/*                                        Share data                                        */
/********************************************************************************************/

--Create a share using the ACCOUNTADMIN role
use role accountadmin;
create or replace share hr_data_share comment = 'Secure data sharing of HR data';

show shares;

--Grant privileges on the database objects to include in the share.  
grant usage on database hr_data to share hr_data_share;
grant usage on schema hr_data.shared_hr_data to share hr_data_share;
grant select on hr_data.shared_hr_data.employee_data_v to share hr_data_share;

--Confirm the contents of the share.
show grants to share hr_data_share;

--Add accounts to the share.                                    */
alter share hr_data_share set accounts = PWA89469;

/********************************************************************************************/
/*              Scenario 2: Secure view for sharing with column-level security              */
/********************************************************************************************/

--Suppose we want to share all records but redact certain fields. 
--Users can see all rows but only their data is not redacted

--create a new secure view
create or replace secure view hr_data.shared_hr_data.employee_data_v2 
as
    select a.*
    from hr_data.MAIN_HR_DATA.EMPLOYEE_DATA as a
;

grant select on hr_data.shared_hr_data.employee_data_v2 to public;

--create a masking policy based on department
create or replace masking policy mask_pii as
  (val string,department string) returns string ->
  case
    when exists 
        (select department
         from hr_data.MAIN_HR_DATA.SHARING_ACCESS
         where snowflake_account=current_account() and hr_data.MAIN_HR_DATA.SHARING_ACCESS.department=department) then val
      else '*MASKED*'
    end;

--apply the policy to view
alter view hr_data.shared_hr_data.employee_data_v2 modify first_name set masking policy mask_pii using (first_name, department);
alter view hr_data.shared_hr_data.employee_data_v2 modify last_name set masking policy mask_pii using (last_name, department);
alter view hr_data.shared_hr_data.employee_data_v2 modify street_address set masking policy mask_pii using (street_address, department);
alter view hr_data.shared_hr_data.employee_data_v2 modify ssn set masking policy mask_ssn;

--test - provider account
select * from hr_data.shared_hr_data.employee_data_v2; --provider account can see unmasked data

--test - consumer account
alter session set simulated_data_sharing_consumer=PWA89469;

select * from hr_data.shared_hr_data.employee_data_v2;

alter session unset simulated_data_sharing_consumer;

--grant access to the view to the share
grant select on hr_data.shared_hr_data.employee_data_v2 to share hr_data_share;
