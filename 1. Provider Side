
--as best practice, use sysadmin when creating snowflake objects such as databases, schemas and tables
use role sysadmin;

/*****************************************************************************************************/
/*                                         Create Demo Data                                          */
/*****************************************************************************************************/

--Set context
create database if not exists hr_data; --mock database imitate SABHRS
create schema if not exists main_hr_data; --mock HR data in SABHRS
create schema if not exists shared_hr_data; -- mock HR data that will be shared with departments
create stage if not exists source_data;
create warehouse if not exists hr_data_wh;

use database hr_data;
use schema main_hr_data;
use warehouse hr_data_wh;


-- Load some Employee data
-- in SnowSQL, execute 
    --snowsql -a fba61831 -u admin
    --use database hr_data
    --use schema main_hr_data
    --put file:///Users/drostovtseva/Downloads/Employee_data.csv @source_data;
ls @source_data;

create or replace table employee_data
(department varchar, id integer, first_name varchar, last_name varchar, ssn varchar, street_address varchar,
 city varchar, state varchar, zip_code varchar,salary integer)
;

create or replace file format my_csv type = 'CSV' skip_header = 1;

copy into employee_data from @source_data
file_format=(format_name=my_csv);

--Query demo data

select * from employee_data;

select department, count(*) num_employees, round(avg(salary)) avg_salary
from employee_data
group by 1
order by 1;



/********************************************************************/
/*                   Create PII-user User Role                      */
/********************************************************************/

--create roles and grant them to John for testing
use role securityadmin;
create or replace role pii_user;
grant role pii_user to user john;
grant role pii_user to role sysadmin;

--give PII user grants to HR data;
use role sysadmin;
grant usage on warehouse hr_data_wh to role pii_user;
grant usage on database hr_data to role pii_user;
grant usage on schema main_hr_data to role pii_user;
grant select on all tables in database hr_data to role pii_user;

/***********************************************************************/
/*       Implement masking policies for column-level control           */
/***********************************************************************/

-- Create masking policies to protect our PII data   
create or replace masking policy mask_string_simple as
  (val string) returns string ->
  case
    when current_role() in ('PII_USER') then val
      else '**masked**'
    end;
    
create or replace masking policy mask_int_simple as
  (val integer) returns integer ->
  case
    when current_role() in ('PII_USER') then val
      else -999999
    end;

create or replace masking policy mask_zip3 as
  (val string) returns string ->
  case
    when current_role() in ('PII_USER') then val
      else substr(val,1,3)||'**'
    end;
   
    
alter table employee_data modify
    column ssn set masking policy mask_string_simple,
    column street_address set masking policy mask_string_simple,
    column zip_code set masking policy mask_zip3,
    column salary set masking policy mask_int_simple;

select * from employee_data; -- as system admin, I see masked data

use role pii_user;
select * from employee_data;

use role sysadmin;


/***********************************************************************/
/*             Flexibly share data with other departments              */
/***********************************************************************/

-- Create a mapping table to enable row access control
create or replace table sharing_access (
  department string,
  snowflake_account string
);

insert into sharing_access 
values
('Dept1', current_account()), --current account = FBA61831 and it is the owner of the data
('Dept2', current_account()),
('Dept3', current_account()),
('Dept1', 'PWA89469'),-- the second account belongs to Dept1 and they can only see Dept1 data
('Dept2', 'PKA22797');-- the third account belongs to Dept2 and they can only see Dept2 data 

select * from sharing_access;

/********************************************************************************************/
/*               Create a secure view for sharing with row-level security                */
/********************************************************************************************/

--data to be shared
select department, count(*)
from employee_data
group by 1;

--mapping table to enable row-level security
select * from sharing_access;

--Create a secure view in the 'shared_hr_data' schema. This view filters the employee data from the first
--table by account, using the mapping information in the second table.         

create or replace secure view hr_data.shared_hr_data.employee_data_v as
    select a.*
    from hr_data.MAIN_HR_DATA.EMPLOYEE_DATA as a
    join hr_data.MAIN_HR_DATA.SHARING_ACCESS as b on a.department = b.department
    and b.snowflake_account = current_account();

--test the secure view by first querying the data as the provider account. */
select * from hr_data.shared_hr_data.employee_data_v;
select count(*) from hr_data.shared_hr_data.employee_data_v;

select department, count(*) 
from hr_data.shared_hr_data.employee_data_v
group by 1;

select * from hr_data.shared_hr_data.employee_data_v where department='Dept2';

-- next, test the secure view by querying the data as a simulated consumer account.                  */
alter session set simulated_data_sharing_consumer=PWA89469;

select count(*) from hr_data.shared_hr_data.employee_data_v; -- only 1/3 of the records are visible;
select * from hr_data.shared_hr_data.employee_data_v;

select department, count(*) 
from hr_data.shared_hr_data.employee_data_v
group by 1; --only Dept1 data is visible

select * from hr_data.shared_hr_data.employee_data_v where department='Dept2'; --cannot see Dept2 data

alter session unset simulated_data_sharing_consumer;

/********************************************************************************************/
/*                                        Share data                                        */
/********************************************************************************************/

--Create a share using the ACCOUNTADMIN role
--Shares are created by accountadmin
use role accountadmin;
create or replace share hr_data_share comment = 'Secure data sharing of HR data';

show shares;

--Grant privileges on the database objects to include in the share.  
grant usage on database hr_data to share hr_data_share;
grant usage on schema hr_data.shared_hr_data to share hr_data_share;
grant select on hr_data.shared_hr_data.employee_data_v to share hr_data_share;

--Confirm the contents of the share.
show grants to share hr_data_share;

--Add accounts to the share.                                    */
alter share hr_data_share set accounts = PWA89469,PKA22797;



//reset
drop table if exists HR_DATA.MAIN_HR_DATA.EMPLOYEE_DATA;
drop table if exists HR_DATA.MAIN_HR_DATA.SHARING_ACCESS;

--drop share
use role accountadmin;
drop SHARE if exists IDENTIFIER('"HR_DATA_SHARE"');
drop role if exists pii_user;
